<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>华擎B365m-itx黑苹果EFI</title>
    <url>/2020/11/11/hua-qing-b365m-itx-hei-ping-guo-efi/</url>
    <content><![CDATA[<h1 id="电脑配置清单"><a href="#电脑配置清单" class="headerlink" title="电脑配置清单"></a>电脑配置清单</h1><ul>
<li>主板： 华擎b365m-itx/ac</li>
<li>CPU:    i5 9400</li>
<li>内存： 枭鲸16G 2666MHz * 2</li>
<li>硬盘：海康威视C2000 Pro 1024G + SN750 512G + 1024机械硬盘（备份系统）</li>
<li>网卡： BCM94360CS2（免驱）</li>
<li>显卡： 平时只打代码，不打游戏，就没买独显了</li>
</ul>
<h1 id="引导文件EFI"><a href="#引导文件EFI" class="headerlink" title="引导文件EFI"></a>引导文件EFI</h1><ul>
<li><p>系统：Catalina 10.15.7</p>
</li>
<li><p>OpenCore 0.6.3</p>
</li>
</ul>
<p><a href="https://github.com/KeXQ/-b365itx-i59400-efi.git">EFI</a></p>
<h1 id="使用情况"><a href="#使用情况" class="headerlink" title="使用情况"></a>使用情况</h1><ul>
<li>达到99%的完美度</li>
<li>节能五项都能使用</li>
<li>单系统MacOS</li>
</ul>
<h1 id="谢鸣"><a href="#谢鸣" class="headerlink" title="谢鸣"></a>谢鸣</h1><ul>
<li>黑果小兵提供的<a href="https://blog.daliansky.net/macOS-Catalina-10.15.7-19H2-Release-version-with-Clover-5122-original-image-Double-EFI-Version-UEFI-and-MBR.html">镜像</a>以及<a href="https://blog.daliansky.net/OpenCore-BootLoader.html">精解OpenCore</a>的帮助</li>
<li>远景论坛大佬们的指导</li>
</ul>
<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="https://gitee.com/kexiquan/picture/raw/master/uPic/image-20201110224153663.png" alt="image-20201110224153663"></p>
<p><img src="https://gitee.com/kexiquan/picture/raw/master/uPic/image-20201110224319790.png" alt="image-20201110224319790"></p>
<ul>
<li>硬解没问题</li>
</ul>
<p><img src="https://gitee.com/kexiquan/picture/raw/master/uPic/image-20201110230539942.png" alt="image-20201110230539942"></p>
]]></content>
      <categories>
        <category>黑苹果</category>
      </categories>
      <tags>
        <tag>OpenCore</tag>
      </tags>
  </entry>
  <entry>
    <title>三个数之和</title>
    <url>/2020/11/12/san-ge-shu-zhi-he/</url>
    <content><![CDATA[<h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p>给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元组。</p>
<p>注意：答案中不可以包含重复的三元组。</p>
<p>示例：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">给定数组 nums = [-1, 0, 1, 2, -1, -4]，</span><br><span class="line"></span><br><span class="line">满足要求的三元组集合为：</span><br><span class="line">[</span><br><span class="line">  [-1, 0, 1],</span><br><span class="line">  [-1, -1, 2]</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure>



<h1 id="解法一：暴力解法"><a href="#解法一：暴力解法" class="headerlink" title="解法一：暴力解法"></a>解法一：暴力解法</h1><ul>
<li>先排序，后暴力遍历，时间复杂度为O(n^3)</li>
</ul>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; threeSum(<span class="keyword">int</span>[] nums) {</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> len = nums.length;</span><br><span class="line">        <span class="keyword">if</span>(len &lt; <span class="number">3</span>) {</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 排序</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i ++){</span><br><span class="line">            <span class="keyword">int</span> x = nums[i];</span><br><span class="line">            <span class="keyword">if</span>(x &gt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// 去重</span></span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; nums[i] == nums[i-<span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; len; j ++ ){</span><br><span class="line">                <span class="keyword">int</span> y = nums[j]; </span><br><span class="line">                <span class="keyword">if</span>(y+x&gt;<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">// 去重</span></span><br><span class="line">                <span class="keyword">if</span> (j &gt; i + <span class="number">1</span> &amp;&amp; nums[j] == nums[j-<span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = j + <span class="number">1</span>; k &lt; len; k ++){</span><br><span class="line">                    <span class="keyword">int</span> z = nums[k];</span><br><span class="line">                    <span class="keyword">if</span>(z + x + y &gt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">                    <span class="comment">// 去重</span></span><br><span class="line">                    <span class="keyword">if</span> (k &gt; j + <span class="number">1</span> &amp;&amp; nums[k] == nums[k-<span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">if</span>(nums[i] + nums[j] == -nums[k]){</span><br><span class="line">                        List&lt;Integer&gt; temp = <span class="keyword">new</span> ArrayList(<span class="number">3</span>);</span><br><span class="line">                        temp.add(nums[i]);</span><br><span class="line">                        temp.add(nums[j]);</span><br><span class="line">                        temp.add(nums[k]);</span><br><span class="line">                        list.add(temp);</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li>注： 在leetcode上超时</li>
</ul>
<h1 id="解法二：-暴力解法-hashmap"><a href="#解法二：-暴力解法-hashmap" class="headerlink" title="解法二： 暴力解法+hashmap"></a>解法二： 暴力解法+hashmap</h1><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; threeSum(<span class="keyword">int</span>[] nums) {</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> len = nums.length;</span><br><span class="line">        <span class="keyword">if</span>(len &lt; <span class="number">3</span>) {</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        }</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        Map&lt;Integer,Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">// 将数组存放到map中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) {</span><br><span class="line">            map.put(nums[i],i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i ++){</span><br><span class="line">            <span class="keyword">int</span> x = nums[i];</span><br><span class="line">            <span class="keyword">if</span> (x &gt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; nums[i] == nums[i-<span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; len; j ++ ){</span><br><span class="line">                <span class="keyword">int</span> y = nums[j];</span><br><span class="line">                <span class="comment">// x + y &gt; 0表示后面的和一定大于0</span></span><br><span class="line">                <span class="keyword">if</span> (x + y &gt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">// 去重</span></span><br><span class="line">                <span class="keyword">if</span> (j &gt; i + <span class="number">1</span> &amp;&amp; nums[j] == nums[j-<span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">int</span> z = <span class="number">0</span> - x - y;</span><br><span class="line">                <span class="comment">// 判断z是否在map中且z的index &gt; j || i</span></span><br><span class="line">                <span class="keyword">if</span> (map.containsKey(z) &amp;&amp; map.get(z) &gt; j){</span><br><span class="line">                    List&lt;Integer&gt; temp = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">3</span>);</span><br><span class="line">                    temp.add(x);</span><br><span class="line">                    temp.add(y);</span><br><span class="line">                    temp.add(z);</span><br><span class="line">                    list.add(temp);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<h1 id="解法三：左右指针"><a href="#解法三：左右指针" class="headerlink" title="解法三：左右指针"></a>解法三：左右指针</h1><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line">List&lt;List&lt;Integer&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"> <span class="keyword">int</span> len = nums.length;</span><br><span class="line"> <span class="keyword">if</span> (len &lt; <span class="number">3</span>) {</span><br><span class="line">     <span class="keyword">return</span> list;</span><br><span class="line"> }</span><br><span class="line"> Arrays.sort(nums);</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) {</span><br><span class="line">     <span class="comment">// 当第一个数大于0时，说明该集合的和大于0；</span></span><br><span class="line">     <span class="keyword">if</span> (nums[i] &gt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">     <span class="comment">// 去重</span></span><br><span class="line">     <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; nums[i] == nums[i - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">     <span class="keyword">int</span> l = i + <span class="number">1</span>;</span><br><span class="line">     <span class="keyword">int</span> r = nums.length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">while</span> (l &lt; r){</span><br><span class="line">         <span class="keyword">int</span> num = nums[l] + nums[i] + nums[r];</span><br><span class="line">         <span class="comment">// 当三个数的和大于0时，l指针左移，且去重</span></span><br><span class="line">         <span class="keyword">if</span> (num &gt; <span class="number">0</span>){</span><br><span class="line">             <span class="keyword">while</span> (l &lt; r &amp;&amp; nums[r] == nums[--r]);</span><br><span class="line">         }</span><br><span class="line">         <span class="comment">// 当三个数的和小于0时，r指针右移，且去重</span></span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (num &lt; <span class="number">0</span>){</span><br><span class="line">             <span class="keyword">while</span> (l &lt; r &amp;&amp; nums[l] == nums[++l]);</span><br><span class="line">         }</span><br><span class="line">         <span class="comment">// 当三个数的等于0时，存放结果，左右去重</span></span><br><span class="line">         <span class="keyword">else</span> {</span><br><span class="line">             List&lt;Integer&gt; temp = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">3</span>);</span><br><span class="line">             temp.add(nums[l]);</span><br><span class="line">             temp.add(nums[i]);</span><br><span class="line">             temp.add(nums[r]);</span><br><span class="line">             list.add(temp);</span><br><span class="line">             <span class="comment">// 右去重</span></span><br><span class="line">             <span class="keyword">while</span> (l &lt; r &amp;&amp; nums[r] == nums[--r]);</span><br><span class="line">             <span class="comment">// 左去重</span></span><br><span class="line">             <span class="keyword">while</span> (l &lt; r &amp;&amp; nums[l] == nums[++l]);</span><br><span class="line">         }</span><br><span class="line">     }</span><br><span class="line"></span><br><span class="line"> }</span><br><span class="line"> <span class="keyword">return</span> list;</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>求和</tag>
        <tag>排序</tag>
      </tags>
  </entry>
</search>
